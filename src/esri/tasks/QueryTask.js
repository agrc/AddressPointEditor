//>>built
define(["dojo/_base/declare","dojo/_base/lang","dojo/_base/array","dojo/_base/Deferred","dojo/_base/json","dojo/has","esri/kernel","esri/request","esri/deferredUtils","esri/geometry/normalizeUtils","esri/tasks/Task","esri/tasks/FeatureSet"],function(h,g,m,n,k,s,t,j,o,p,q,l){h=h(q,{declaredClass:"esri.tasks.QueryTask",_eventMap:{complete:["featureSet"],"execute-for-count-complete":["count"],"execute-for-ids-complete":["objectIds"],"execute-relationship-query-complete":["featureSets"]},constructor:function(a,f){this._handler=
g.hitch(this,this._handler);this._relationshipQueryHandler=g.hitch(this,this._relationshipQueryHandler);this._executeForIdsHandler=g.hitch(this,this._executeForIdsHandler);this._countHandler=g.hitch(this,this._countHandler);this.source=f&&f.source;this.gdbVersion=f&&f.gdbVersion;this.registerConnectEvents()},__msigns:[{n:"execute",c:4,a:[{i:0,p:["geometry"]}],e:2},{n:"executeForIds",c:3,a:[{i:0,p:["geometry"]}],e:2},{n:"executeForCount",c:3,a:[{i:0,p:["geometry"]}],e:2}],onComplete:function(){},onExecuteRelationshipQueryComplete:function(){},
onExecuteForIdsComplete:function(){},onExecuteForCountComplete:function(){},execute:function(a,f,d,e,b){var c=b.assembly,a=this._encode(g.mixin({},this._url.query,{f:"json"},a.toJson(c&&c[0]))),i=this._handler,r=this._errorHandler;if(this.source)c={source:this.source.toJson()},a.layer=k.toJson(c);if(this.gdbVersion)a.gdbVersion=this.gdbVersion;return j({url:this._url.path+"/query",content:a,callbackParamName:"callback",load:function(a,c){i(a,c,f,d,b.dfd)},error:function(a){r(a,d,b.dfd)},callbackSuffix:e})},
executeRelationshipQuery:function(a,f,d){var a=this._encode(g.mixin({},this._url.query,{f:"json"},a.toJson())),e=this._relationshipQueryHandler,b=this._errorHandler;if(this.gdbVersion)a.gdbVersion=this.gdbVersion;var c=new n(o._dfdCanceller);c._pendingDfd=j({url:this._url.path+"/queryRelatedRecords",content:a,callbackParamName:"callback",load:function(a,b){e(a,b,f,d,c)},error:function(a){b(a,d,c)}});return c},executeForIds:function(a,f,d,e){var b=e.assembly,a=this._encode(g.mixin({},this._url.query,
{f:"json",returnIdsOnly:!0},a.toJson(b&&b[0]))),c=this._executeForIdsHandler,i=this._errorHandler;if(this.source)b={source:this.source.toJson()},a.layer=k.toJson(b);if(this.gdbVersion)a.gdbVersion=this.gdbVersion;return j({url:this._url.path+"/query",content:a,callbackParamName:"callback",load:function(a,b){c(a,b,f,d,e.dfd)},error:function(a){i(a,d,e.dfd)}})},executeForCount:function(a,f,d,e){var b=e.assembly,a=this._encode(g.mixin({},this._url.query,{f:"json",returnIdsOnly:!0,returnCountOnly:!0},
a.toJson(b&&b[0]))),c=this._countHandler,i=this._errorHandler;if(this.source)b={source:this.source.toJson()},a.layer=k.toJson(b);if(this.gdbVersion)a.gdbVersion=this.gdbVersion;return j({url:this._url.path+"/query",content:a,callbackParamName:"callback",load:function(a,b){c(a,b,f,d,e.dfd)},error:function(a){i(a,d,e.dfd)}})},_handler:function(a,f,d,e,b){try{this._successHandler([new l(a)],"onComplete",d,b)}catch(c){this._errorHandler(c,e,b)}},_relationshipQueryHandler:function(a,f,d,e,b){try{var c=
a.geometryType,i=a.spatialReference,g={};m.forEach(a.relatedRecordGroups,function(a){var b={};b.geometryType=c;b.spatialReference=i;b.features=a.relatedRecords;b=new l(b);g[a.objectId]=b});this._successHandler([g],"onExecuteRelationshipQueryComplete",d,b)}catch(h){this._errorHandler(h,e,b)}},_executeForIdsHandler:function(a,f,d,e,b){try{this._successHandler([a.objectIds],"onExecuteForIdsComplete",d,b)}catch(c){this._errorHandler(c,e,b)}},_countHandler:function(a,f,d,e,b){try{var c,g=a.features,h=
a.objectIds;if(h)c=h.length;else{if(g)throw Error("Unable to perform query. Please check your parameters.");c=a.count}this._successHandler([c],"onExecuteForCountComplete",d,b)}catch(j){this._errorHandler(j,e,b)}}});p._createWrappers(h);return h});