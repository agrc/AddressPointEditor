//>>built
define(["dojo/_base/declare","dojo/_base/lang","dojo/_base/array","dojo/_base/json","dojo/_base/Deferred","dojo/has","esri/kernel","esri/request","esri/deferredUtils","esri/tasks/Task","esri/geometry/Extent","esri/geometry/Polyline","esri/geometry/Polygon","esri/geometry/Multipoint","esri/geometry/jsonUtils"],function(r,j,p,i,l,x,y,m,n,v,t,u,s,w,o){r=r(v,{declaredClass:"esri.tasks.GeometryService",_eventMap:{"areas-and-lengths-complete":["result"],"auto-complete-complete":["geometries"],"buffer-complete":["geometries"],
"convex-hull-complete":["geometry"],"cut-complete":["result"],"difference-complete":["geometries"],"distance-complete":["distance"],"generalize-complete":["geometries"],"intersect-complete":["geometries"],"label-points-complete":["geometries"],"lengths-complete":["result"],"offset-complete":["geometries"],"project-complete":["geometries"],"relation-complete":["relations"],"reshape-complete":["geometry"],"simplify-complete":["geometries"],"trim-extend-complete":["geometries"],"union-complete":["geometry"]},
constructor:function(){var a=j.hitch;this._projectHandler=a(this,this._projectHandler);this._simplifyHandler=a(this,this._simplifyHandler);this._bufferHandler=a(this,this._bufferHandler);this._areasAndLengthsHandler=a(this,this._areasAndLengthsHandler);this._lengthsHandler=a(this,this._lengthsHandler);this._labelPointsHandler=a(this,this._labelPointsHandler);this._relationHandler=a(this,this._relationHandler);this._convexHullHandler=a(this,this._convexHullHandler);this._unionHandler=a(this,this._unionHandler);
this._autoCompleteHandler=a(this,this._autoCompleteHandler);this._reshapeHandler=a(this,this._reshapeHandler);this._cutHandler=a(this,this._cutHandler);this._intersectHandler=a(this,this._intersectHandler);this._differenceHandler=a(this,this._differenceHandler);this._trimExtendHandler=a(this,this._trimExtendHandler);this._densifyHandler=a(this,this._densifyHandler);this._generalizeHandler=a(this,this._densifyHandler);this._offsetHandler=a(this,this._offsetHandler);this._distanceHandler=a(this,this._distanceHandler);
this.registerConnectEvents()},_encodeGeometries:function(a){var h=[],e,d=a.length;for(e=0;e<d;e++)h.push(a[e].toJson());return{geometryType:o.getJsonType(a[0]),geometries:h}},_decodeGeometries:function(a,h,e){var d=o.getGeometryType(h),a=a.geometries,g=[],b={spatialReference:e.toJson()},f=j.mixin;p.forEach(a,function(a,e){g[e]=new d(f(a,b))});return g},_toProjectGeometry:function(a){var h=a.spatialReference.toJson();return a instanceof t?new s({rings:[[[a.xmin,a.ymin],[a.xmin,a.ymax],[a.xmax,a.ymax],
[a.xmax,a.ymin],[a.xmin,a.ymin]]],spatialReference:h}):new u({paths:[[].concat(a.points)],spatialReference:h})},_fromProjectedGeometry:function(a,h,e){return"esriGeometryEnvelope"===h?(a=a.rings[0],new t(a[0][0],a[0][1],a[2][0],a[2][1],e)):new w({points:a.paths[0],spatialReference:e.toJson()})},project:function(a,h,e,d){var g=j.mixin({},this._url.query,{f:"json"}),b;a.geometries?(d=e,e=h,h=a.outSR,b=a.geometries[0],g=j.mixin(g,a.toJson())):(b=a[0],g=j.mixin(g,{outSR:h.wkid||i.toJson(h.toJson()),inSR:b.spatialReference.wkid||
i.toJson(b.spatialReference.toJson()),geometries:i.toJson(this._encodeGeometries(a))}));var f=o.getJsonType(b),c=this._projectHandler,k=this._errorHandler,q=new l(n._dfdCanceller);q._pendingDfd=m({url:this._url.path+"/project",content:g,callbackParamName:"callback",load:function(a,b){c(a,b,f,h,e,d,q)},error:function(a){k(a,d,q)}});return q},_projectHandler:function(a,h,e,d,g,b,f){try{this._successHandler([this._decodeGeometries(a,e,d)],"onProjectComplete",g,f)}catch(c){this._errorHandler(c,b,f)}},
onProjectComplete:function(){},simplify:function(a,h,e){var d=a[0].spatialReference,g=j.mixin({},this._url.query,{f:"json",sr:d.wkid?d.wkid:i.toJson(d.toJson()),geometries:i.toJson(this._encodeGeometries(a))}),b=o.getJsonType(a[0]),f=this._simplifyHandler,c=this._errorHandler,k=new l(n._dfdCanceller);k._pendingDfd=m({url:this._url.path+"/simplify",content:g,callbackParamName:"callback",load:function(a,c){f(a,c,b,d,h,e,k)},error:function(a){c(a,e,k)}});return k},_simplifyHandler:function(a,h,e,d,g,
b,f){try{this._successHandler([this._decodeGeometries(a,e,d)],"onSimplifyComplete",g,f)}catch(c){this._errorHandler(c,b,f)}},onSimplifyComplete:function(){},convexHull:function(a,h,e){var d=a[0].spatialReference,a=j.mixin({},this._url.query,{f:"json",sr:i.toJson(d.toJson()),geometries:i.toJson(this._encodeGeometries(a))}),g=this._convexHullHandler,b=this._errorHandler,f=new l(n._dfdCanceller);f._pendingDfd=m({url:this._url.path+"/convexHull",content:a,callbackParamName:"callback",load:function(a,
b){g(a,b,d,h,e,f)},error:function(a){b(a,e,f)}});return f},_convexHullHandler:function(a,h,e,d,g,b){try{this._successHandler([o.fromJson(a.geometry).setSpatialReference(e)],"onConvexHullComplete",d,b)}catch(f){this._errorHandler(f,g,b)}},onConvexHullComplete:function(){},union:function(a,h,e){var d=a[0].spatialReference,a=j.mixin({},this._url.query,{f:"json",sr:i.toJson(d.toJson()),geometries:i.toJson(this._encodeGeometries(a))}),g=this._unionHandler,b=this._errorHandler,f=new l(n._dfdCanceller);
f._pendingDfd=m({url:this._url.path+"/union",content:a,callbackParamName:"callback",load:function(a,b){g(a,b,d,h,e,f)},error:function(a){b(a,e,f)}});return f},_unionHandler:function(a,h,e,d,g,b){try{this._successHandler([o.fromJson(a.geometry).setSpatialReference(e)],"onUnionComplete",d,b)}catch(f){this._errorHandler(f,g,b)}},onUnionComplete:function(){},autoComplete:function(a,h,e,d){var g=a[0].spatialReference,a=j.mixin({},this._url.query,{f:"json",sr:i.toJson(g.toJson()),polygons:i.toJson(this._encodeGeometries(a).geometries),
polylines:i.toJson(this._encodeGeometries(h).geometries)}),b=this._autoCompleteHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/autoComplete",content:a,callbackParamName:"callback",load:function(a,f){b(a,f,g,e,d,c)},error:function(a){f(a,d,c)}});return c},_autoCompleteHandler:function(a,h,e,d,g,b){try{var f=a.geometries,a=[],c,k=f.length;for(c=0;c<k;c++)a[c]=new s({spatialReference:e,rings:f[c].rings});this._successHandler([a],"onAutoCompleteComplete",d,
b)}catch(q){this._errorHandler(q,g,b)}},onAutoCompleteComplete:function(){},reshape:function(a,h,e,d){var g=a.spatialReference,a=j.mixin({},this._url.query,{f:"json",sr:i.toJson(g.toJson()),target:i.toJson({geometryType:o.getJsonType(a),geometry:a.toJson()}),reshaper:i.toJson(h.toJson())}),b=this._reshapeHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/reshape",content:a,callbackParamName:"callback",load:function(a,f){b(a,f,g,e,d,c)},error:function(a){f(a,
d,c)}});return c},_reshapeHandler:function(a,h,e,d,g,b){try{this._successHandler([o.fromJson(a.geometry).setSpatialReference(e)],"onReshapeComplete",d,b)}catch(f){this._errorHandler(f,g,b)}},onReshapeComplete:function(){},cut:function(a,h,e,d){var g=a[0].spatialReference,b=p.map(a,function(a){return a.toJson()}),a=j.mixin({},this._url.query,{f:"json",sr:i.toJson(g.toJson()),target:i.toJson({geometryType:o.getJsonType(a[0]),geometries:b}),cutter:i.toJson(h.toJson())}),f=this._cutHandler,c=this._errorHandler,
k=new l(n._dfdCanceller);k._pendingDfd=m({url:this._url.path+"/cut",content:a,callbackParamName:"callback",load:function(a,b){f(a,b,g,e,d,k)},error:function(a){c(a,d,k)}});return k},_cutHandler:function(a,h,e,d,g,b){try{var f=a.geometries,c={};c.cutIndexes=a.cutIndexes;c.geometries=[];p.forEach(f,function(a){c.geometries.push(o.fromJson(a).setSpatialReference(e))});this._successHandler([c],"onCutComplete",d,b)}catch(k){this._errorHandler(k,g,b)}},onCutComplete:function(){},intersect:function(a,h,
e,d){var g=a[0].spatialReference,a=j.mixin({},this._url.query,{f:"json",sr:i.toJson(g.toJson()),geometries:i.toJson(this._encodeGeometries(a)),geometry:i.toJson({geometryType:o.getJsonType(h),geometry:h.toJson()})}),b=this._intersectHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/intersect",content:a,callbackParamName:"callback",load:function(a,f){b(a,f,g,e,d,c)},error:function(a){f(a,d,c)}});return c},_intersectHandler:function(a,h,e,d,g,b){try{var f=[];
p.forEach(a.geometries,function(a){f.push(o.fromJson(a).setSpatialReference(e))});this._successHandler([f],"onIntersectComplete",d,b)}catch(c){this._errorHandler(c,g,b)}},onIntersectComplete:function(){},difference:function(a,h,e,d){var g=a[0].spatialReference,a=j.mixin({},this._url.query,{f:"json",sr:i.toJson(g.toJson()),geometries:i.toJson(this._encodeGeometries(a)),geometry:i.toJson({geometryType:o.getJsonType(h),geometry:h.toJson()})}),b=this._differenceHandler,f=this._errorHandler,c=new l(n._dfdCanceller);
c._pendingDfd=m({url:this._url.path+"/difference",content:a,callbackParamName:"callback",load:function(a,f){b(a,f,g,e,d,c)},error:function(a){f(a,d,c)}});return c},_differenceHandler:function(a,h,e,d,g,b){try{var f=[];p.forEach(a.geometries,function(a){f.push(o.fromJson(a).setSpatialReference(e))});this._successHandler([f],"onDifferenceComplete",d,b)}catch(c){this._errorHandler(c,g,b)}},onDifferenceComplete:function(){},buffer:function(a,h,e){var d=j.mixin({},this._url.query,{f:"json"},a.toJson()),
g=a.outSpatialReference||a.geometries[0].spatialReference,b=this._bufferHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/buffer",content:d,callbackParamName:"callback",load:function(a,f){b(a,f,g,h,e,c)},error:function(a){f(a,e,c)}});return c},_bufferHandler:function(a,h,e,d,g,b){try{var f=a.geometries,a=[],c,k=f.length;for(c=0;c<k;c++)a[c]=new s({spatialReference:e,rings:f[c].rings});this._successHandler([a],"onBufferComplete",d,b)}catch(i){this._errorHandler(i,
g,b)}},onBufferComplete:function(){},areasAndLengths:function(a,h,e){var a=j.mixin({},this._url.query,{f:"json"},a.toJson()),d=this._areasAndLengthsHandler,g=this._errorHandler,b=new l(n._dfdCanceller);b._pendingDfd=m({url:this._url.path+"/areasAndLengths",content:a,callbackParamName:"callback",load:function(a,c){d(a,c,h,e,b)},error:function(a){g(a,e,b)}});return b},_areasAndLengthsHandler:function(a,h,e,d,g){try{this._successHandler([a],"onAreasAndLengthsComplete",e,g)}catch(b){this._errorHandler(b,
d,g)}},onAreasAndLengthsComplete:function(){},lengths:function(a,h,e){var a=j.mixin({},this._url.query,{f:"json"},a.toJson()),d=this._lengthsHandler,g=this._errorHandler,b=new l(n._dfdCanceller);b._pendingDfd=m({url:this._url.path+"/lengths",content:a,callbackParamName:"callback",load:function(a,c){d(a,c,h,e,b)},error:function(a){g(a,e,b)}});return b},_lengthsHandler:function(a,h,e,d,g){try{this._successHandler([a],"onLengthsComplete",e,g)}catch(b){this._errorHandler(b,d,g)}},onLengthsComplete:function(){},
labelPoints:function(a,h,e){var d=p.map(a,function(a){return a.toJson()}),g=a[0].spatialReference,d=j.mixin({},this._url.query,{f:"json",sr:g.wkid?g.wkid:i.toJson(g.toJson()),polygons:i.toJson(d)}),b=this._labelPointsHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/labelPoints",content:d,callbackParamName:"callback",load:function(f,d){b(f,d,a,g,h,e,c)},error:function(a){f(a,e,c)}});return c},_labelPointsHandler:function(a,h,e,d,g,b,f){try{var c=[];p.forEach(a.labelPoints,
function(a){c.push(o.fromJson(a).setSpatialReference(d))});this._successHandler([c],"onLabelPointsComplete",g,f)}catch(k){this._errorHandler(k,b,f)}},onLabelPointsComplete:function(){},relation:function(a,h,e){var a=j.mixin({},this._url.query,{f:"json"},a.toJson()),d=this._relationHandler,g=this._errorHandler,b=new l(n._dfdCanceller);b._pendingDfd=m({url:this._url.path+"/relation",content:a,callbackParamName:"callback",load:function(a,c){d(a,c,h,e,b)},error:function(a){g(a,e,b)}});return b},_relationHandler:function(a,
h,e,d,g){try{this._successHandler([a.relations],"onRelationComplete",e,g)}catch(b){this._errorHandler(b,d,g)}},onRelationComplete:function(){},trimExtend:function(a,h,e){var d=j.mixin({},this._url.query,{f:"json"},a.toJson()),g=a.sr,b=this._trimExtendHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/trimExtend",content:d,callbackParamName:"callback",load:function(a,d){b(a,d,g,h,e,c)},error:function(a){f(a,e,c)}});return c},_trimExtendHandler:function(a,h,
e,d,g,b){try{var f=a.geometries,a=[],c,k=f.length;for(c=0;c<k;c++)a[c]=new u({spatialReference:e,paths:f[c].paths});this._successHandler([a],"onTrimExtendComplete",d,b)}catch(i){this._errorHandler(i,g,b)}},onTrimExtendComplete:function(){},densify:function(a,h,e){var d=j.mixin({},this._url.query,{f:"json"},a.toJson()),g=a.geometries[0].spatialReference,b=this._densifyHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/densify",content:d,callbackParamName:"callback",
load:function(a,d){b(a,d,g,h,e,c)},error:function(a){f(a,e,c)}});return c},_densifyHandler:function(a,h,e,d,g,b){try{var f=[];p.forEach(a.geometries,function(a){f.push(o.fromJson(a).setSpatialReference(e))});this._successHandler([f],"onDensifyComplete",d,b)}catch(c){this._errorHandler(c,g,b)}},onDensifyComplete:function(){},generalize:function(a,h,e){var d=j.mixin({},this._url.query,{f:"json"},a.toJson()),g=a.geometries[0].spatialReference,b=this._generalizeHandler,f=this._errorHandler,c=new l(n._dfdCanceller);
c._pendingDfd=m({url:this._url.path+"/generalize",content:d,callbackParamName:"callback",load:function(a,d){b(a,d,g,h,e,c)},error:function(a){f(a,e,c)}});return c},_generalizeHandler:function(a,h,e,d,g,b){try{var f=[];p.forEach(a.geometries,function(a){f.push(o.fromJson(a).setSpatialReference(e))});this._successHandler([f],"onGeneralizeComplete",d,b)}catch(c){this._errorHandler(c,g,b)}},onGeneralizeComplete:function(){},offset:function(a,h,e){var d=j.mixin({},this._url.query,{f:"json"},a.toJson()),
g=a.geometries[0].spatialReference,b=this._offsetHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/offset",content:d,callbackParamName:"callback",load:function(a,d){b(a,d,g,h,e,c)},error:function(a){f(a,e,c)}});return c},_offsetHandler:function(a,h,e,d,g,b){try{var f=[];p.forEach(a.geometries,function(a){f.push(o.fromJson(a).setSpatialReference(e))});this._successHandler([f],"onOffsetComplete",d,b)}catch(c){this._errorHandler(c,g,b)}},onOffsetComplete:function(){},
distance:function(a,h,e){var d=j.mixin({},this._url.query,{f:"json"},a.toJson()),g=a.geometry1.spatialReference,b=this._distanceHandler,f=this._errorHandler,c=new l(n._dfdCanceller);c._pendingDfd=m({url:this._url.path+"/distance",content:d,callbackParamName:"callback",load:function(a,d){b(a,d,g,h,e,c)},error:function(a){f(a,e,c)}});return c},_distanceHandler:function(a,h,e,d,g,b){try{a=a&&a.distance,this._successHandler([a],"onDistanceComplete",d,b)}catch(f){this._errorHandler(f,g,b)}},onDistanceComplete:function(){}});
j.mixin(r,{UNIT_METER:9001,UNIT_GERMAN_METER:9031,UNIT_FOOT:9002,UNIT_SURVEY_FOOT:9003,UNIT_CLARKE_FOOT:9005,UNIT_FATHOM:9014,UNIT_NAUTICAL_MILE:9030,UNIT_SURVEY_CHAIN:9033,UNIT_SURVEY_LINK:9034,UNIT_SURVEY_MILE:9035,UNIT_KILOMETER:9036,UNIT_CLARKE_YARD:9037,UNIT_CLARKE_CHAIN:9038,UNIT_CLARKE_LINK:9039,UNIT_SEARS_YARD:9040,UNIT_SEARS_FOOT:9041,UNIT_SEARS_CHAIN:9042,UNIT_SEARS_LINK:9043,UNIT_BENOIT_1895A_YARD:9050,UNIT_BENOIT_1895A_FOOT:9051,UNIT_BENOIT_1895A_CHAIN:9052,UNIT_BENOIT_1895A_LINK:9053,
UNIT_BENOIT_1895B_YARD:9060,UNIT_BENOIT_1895B_FOOT:9061,UNIT_BENOIT_1895B_CHAIN:9062,UNIT_BENOIT_1895B_LINK:9063,UNIT_INDIAN_FOOT:9080,UNIT_INDIAN_1937_FOOT:9081,UNIT_INDIAN_1962_FOOT:9082,UNIT_INDIAN_1975_FOOT:9083,UNIT_INDIAN_YARD:9084,UNIT_INDIAN_1937_YARD:9085,UNIT_INDIAN_1962_YARD:9086,UNIT_INDIAN_1975_YARD:9087,UNIT_FOOT_1865:9070,UNIT_RADIAN:9101,UNIT_DEGREE:9102,UNIT_ARCMINUTE:9103,UNIT_ARCSECOND:9104,UNIT_GRAD:9105,UNIT_GON:9106,UNIT_MICRORADIAN:9109,UNIT_ARCMINUTE_CENTESIMAL:9112,UNIT_ARCSECOND_CENTESIMAL:9113,
UNIT_MIL6400:9114,UNIT_BRITISH_1936_FOOT:9095,UNIT_GOLDCOAST_FOOT:9094,UNIT_INTERNATIONAL_CHAIN:109003,UNIT_INTERNATIONAL_LINK:109004,UNIT_INTERNATIONAL_YARD:109001,UNIT_STATUTE_MILE:9093,UNIT_SURVEY_YARD:109002,UNIT_50KILOMETER_LENGTH:109030,UNIT_150KILOMETER_LENGTH:109031,UNIT_DECIMETER:109005,UNIT_CENTIMETER:109006,UNIT_MILLIMETER:109007,UNIT_INTERNATIONAL_INCH:109008,UNIT_US_SURVEY_INCH:109009,UNIT_INTERNATIONAL_ROD:109010,UNIT_US_SURVEY_ROD:109011,UNIT_US_NAUTICAL_MILE:109012,UNIT_UK_NAUTICAL_MILE:109013,
UNIT_SQUARE_INCHES:"esriSquareInches",UNIT_SQUARE_FEET:"esriSquareFeet",UNIT_SQUARE_YARDS:"esriSquareYards",UNIT_ACRES:"esriAcres",UNIT_SQUARE_MILES:"esriSquareMiles",UNIT_SQUARE_MILLIMETERS:"esriSquareMillimeters",UNIT_SQUARE_CENTIMETERS:"esriSquareCentimeters",UNIT_SQUARE_DECIMETERS:"esriSquareDecimeters",UNIT_SQUARE_METERS:"esriSquareMeters",UNIT_ARES:"esriAres",UNIT_HECTARES:"esriHectares",UNIT_SQUARE_KILOMETERS:"esriSquareKilometers"});return r});